.include "mov32.inc"

@ System Calls
.set READ, 3
.set WRITE, 4
.set OPEN, 5
.set CLOSE, 6

@ Constants for System Calls
.set STDIN, 0
.set STDOUT, 1
.set O_WRONLY, 1
.set O_CREAT, 64
.set O_RDWR , 2
.set O_TRUNC, 512
.set O_APPEND, 1024
.set CREAT_FLAGS, (/*O_WRONLY*/O_RDWR | O_APPEND | O_CREAT/* | O_TRUNC*/)


.balign 4
.data
filename:
	.ascii "highscore.txt\0"
	.set filename_Len, .-filename
newline:
	.ascii "\n\0"
	.set newline_Len, .-newline
empty_mess:
	.ascii "Empty File::::\n\0"
	.set empty_mess_Len, .-empty_mess


.balign 4
.bss
userName:
	.space 28
userScore:
	.space 4

file_info:
	.space 32
	.space 32
	.space 32


.balign 4
.text
.global _start
_start:
	push {r4-r9}

	// OpenFile or Create Highscore File
	mov32 r0, filename
	movw r1, #CREAT_FLAGS
	movw r2, #00644 // Permission for File number 644 ultimate power
	mov r7, #OPEN
	svc #0

	//mov r4, r0 // Keep the file name
check_file:
	mov32 r1, file_info
	mov r2, #100
	mov r7, #READ
	svc #0

	mov32 r1, file_info
	ldrb r1, [r1]
	cmp r1, #0
	beq empty





continue:
	// Get input from  user
	mov r0, #STDIN
	mov32 r1, userName
	mov r2, #32
	mov r7, #READ
	svc #0

	// Write to File
	mov r0, r4
empty:
	mov r0, #STDOUT
	mov32 r1, empty_mess
	mov32 r2, empty_mess_Len
	mov r7, #WRITE
	svc #0
	mov32 r1, userName
	mov r2, #6
	mov r7, #WRITE
	svc #0


	pop {r4-r9}

	mov r7, #1
	svc #0
